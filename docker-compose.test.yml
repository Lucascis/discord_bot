version: '3.8'

services:
  # Database service for testing
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: discord
    ports:
      - "5433:5432"
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d discord"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - test-network

  # Redis cache service for testing
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - test-network

  # Test API service only (since we can't test Discord connectivity without real tokens)
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    command: node api/dist/index.js
    environment:
      NODE_ENV: test
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/discord
      REDIS_URL: redis://redis:6379
      DISCORD_TOKEN: test-token-not-real
      DISCORD_APPLICATION_ID: 123456789012345678
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  test_postgres_data:
    driver: local

networks:
  test-network:
    driver: bridge