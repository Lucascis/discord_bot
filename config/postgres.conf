# PostgreSQL Configuration for Discord Bot Production
# Optimized for Discord bot workload with music queue operations

# Connection Settings
listen_addresses = '*'
max_connections = 100
shared_buffers = 256MB
effective_cache_size = 1GB

# Memory Settings
work_mem = 8MB
maintenance_work_mem = 128MB
dynamic_shared_memory_type = posix

# Performance Tuning
checkpoint_completion_target = 0.9
wal_buffers = 16MB
default_statistics_target = 100

# Logging Settings for Production
logging_collector = on
log_directory = '/var/lib/postgresql/data/logs'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_statement = 'none'
log_min_duration_statement = 1000
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
log_checkpoints = on
log_lock_waits = on

# Locale Settings
lc_messages = 'en_US.utf8'
lc_monetary = 'en_US.utf8'
lc_numeric = 'en_US.utf8'
lc_time = 'en_US.utf8'
default_text_search_config = 'pg_catalog.english'

# Optimizations for Discord bot workload
# Frequent small writes with queue updates
synchronous_commit = off
commit_delay = 100
commit_siblings = 5

# Index and query optimization
random_page_cost = 1.1
seq_page_cost = 1.0
cpu_tuple_cost = 0.01
cpu_index_tuple_cost = 0.005
cpu_operator_cost = 0.0025

# Lock timeout to prevent hanging operations
lock_timeout = 30s
idle_in_transaction_session_timeout = 600s
